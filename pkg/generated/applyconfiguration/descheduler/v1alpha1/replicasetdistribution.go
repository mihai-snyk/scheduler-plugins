/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// ReplicaSetDistributionApplyConfiguration represents a declarative configuration of the ReplicaSetDistribution type for use
// with apply.
type ReplicaSetDistributionApplyConfiguration struct {
	Namespace        *string        `json:"namespace,omitempty"`
	ReplicaSetName   *string        `json:"replicaSetName,omitempty"`
	NodeDistribution map[string]int `json:"nodeDistribution,omitempty"`
}

// ReplicaSetDistributionApplyConfiguration constructs a declarative configuration of the ReplicaSetDistribution type for use with
// apply.
func ReplicaSetDistribution() *ReplicaSetDistributionApplyConfiguration {
	return &ReplicaSetDistributionApplyConfiguration{}
}

// WithNamespace sets the Namespace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Namespace field is set to the value of the last call.
func (b *ReplicaSetDistributionApplyConfiguration) WithNamespace(value string) *ReplicaSetDistributionApplyConfiguration {
	b.Namespace = &value
	return b
}

// WithReplicaSetName sets the ReplicaSetName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ReplicaSetName field is set to the value of the last call.
func (b *ReplicaSetDistributionApplyConfiguration) WithReplicaSetName(value string) *ReplicaSetDistributionApplyConfiguration {
	b.ReplicaSetName = &value
	return b
}

// WithNodeDistribution puts the entries into the NodeDistribution field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, the entries provided by each call will be put on the NodeDistribution field,
// overwriting an existing map entries in NodeDistribution field with the same key.
func (b *ReplicaSetDistributionApplyConfiguration) WithNodeDistribution(entries map[string]int) *ReplicaSetDistributionApplyConfiguration {
	if b.NodeDistribution == nil && len(entries) > 0 {
		b.NodeDistribution = make(map[string]int, len(entries))
	}
	for k, v := range entries {
		b.NodeDistribution[k] = v
	}
	return b
}
